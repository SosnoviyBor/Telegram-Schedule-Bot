import sys
sys.path.append("../Telegram-Schedule-Bot")

from aiogram.types import *
from datetime import datetime

from utils.consts import *
from utils.funcs import *

async def today(message: Message):
    day = datetime.today().weekday()+1    # +1 cuz weekday() starts from 0
    if day in [1,6,7]:
        await message.answer("–ù–∞—â–∞—Å—Ç—è, –≤—å–æ–≥–æ–¥–Ω—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –≤—ñ–¥–ø–æ—á–∏—Ç–∏ üòâ\n"\
            "–ê–ª–µ —è–∫—â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è —Ä–æ–∑–∫–ª–∞–¥ –Ω–∞ –≤—ñ–≤—Ç–æ—Ä–æ–∫, –∫–ª–∞—Ü–Ω—ñ—Ç—å <b>/tomorrow</b>", parse_mode=ParseMode.HTML)
        return

    week = get_week()
    if week == 1:
        msg_text = "<code>1 —Ç–∏–∂–¥–µ–Ω—å</code>\n"
    else:
        msg_text = "<code>2 —Ç–∏–∂–¥–µ–Ω—å</code>\n"

    sched = get_schedule(message.from_user.id)
    msg_text += f"<b>{DAYS[day]}</b>\n"
    for id in sched[week][day].keys():
        name = sched[week][day][id][0]
        type = sched[week][day][id][1]
        link = sched[week][day][id][2]
        if pair_is_ignored(message.from_user.id, week, day, id):
            msg_text += f"{id}. <span class='tg-spoiler'><a href='{link}'>{name} ({type})</span></s>\n"
        else:
            msg_text += f"{id}. <a href='{link}'>{name} ({type})</a>\n"

    await message.answer(msg_text, parse_mode=ParseMode.HTML)